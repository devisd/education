'use client'

import React, { useEffect, useState } from 'react';
import { Alert } from './Alert';

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤
interface Holiday {
    startDate: Date;
    endDate: Date;
    message: string;
    type: 'success' | 'info' | 'warning';
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤
const holidays: Holiday[] = [
    {
        // –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∂–µ–Ω—Å–∫–∏–π –¥–µ–Ω—å (8 –º–∞—Ä—Ç–∞)
        startDate: new Date(new Date().getFullYear(), 2, 7), // 7 –º–∞—Ä—Ç–∞ (–º–µ—Å—è—Ü—ã –Ω—É–º–µ—Ä—É—é—Ç—Å—è —Å 0)
        endDate: new Date(new Date().getFullYear(), 2, 8, 23, 59, 59), // 8 –º–∞—Ä—Ç–∞ –∫–æ–Ω–µ—Ü –¥–Ω—è
        message: '–° –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º –∂–µ–Ω—Å–∫–∏–º –¥–Ω–µ–º! üå∑',
        type: 'success',
    },
    {
        // –ù–æ–≤—ã–π –≥–æ–¥
        startDate: new Date(new Date().getFullYear(), 11, 25), // 25 –¥–µ–∫–∞–±—Ä—è
        endDate: new Date(new Date().getFullYear(), 11, 31, 23, 59, 59), // 31 –¥–µ–∫–∞–±—Ä—è –∫–æ–Ω–µ—Ü –¥–Ω—è
        message: '–° –Ω–∞—Å—Ç—É–ø–∞—é—â–∏–º –ù–æ–≤—ã–º –≥–æ–¥–æ–º! üéÑ',
        type: 'info',
    },
    // –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
];

interface HolidayBannerProps {
    className?: string;
    onClose?: () => void;
}

export const HolidayBanner: React.FC<HolidayBannerProps> = ({ className, onClose }) => {
    const [currentHoliday, setCurrentHoliday] = useState<Holiday | null>(null);
    const [isVisible, setIsVisible] = useState(true);

    useEffect(() => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∞–∑–¥–Ω–∏–∫
        const today = new Date();
        const activeHoliday = holidays.find(
            (holiday) => today >= holiday.startDate && today <= holiday.endDate
        );

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–∞–∑–¥–Ω–∏–∫, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω
        setCurrentHoliday(activeHoliday || null);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–∫—Ä—ã–≤–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —ç—Ç–æ—Ç –±–∞–Ω–Ω–µ—Ä —Ä–∞–Ω–µ–µ
        const dismissedHolidays = localStorage.getItem('dismissedHolidays');
        if (dismissedHolidays && activeHoliday) {
            const parsedDismissed = JSON.parse(dismissedHolidays);
            const holidayKey = `${activeHoliday.message}-${activeHoliday.startDate.toISOString()}`;
            if (parsedDismissed.includes(holidayKey)) {
                setIsVisible(false);
            }
        }
    }, []);

    const handleClose = () => {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è –≤ localStorage
        if (currentHoliday) {
            const dismissedHolidays = localStorage.getItem('dismissedHolidays');
            const holidayKey = `${currentHoliday.message}-${currentHoliday.startDate.toISOString()}`;

            let parsedDismissed: string[] = [];
            if (dismissedHolidays) {
                parsedDismissed = JSON.parse(dismissedHolidays);
            }

            localStorage.setItem(
                'dismissedHolidays',
                JSON.stringify([...parsedDismissed, holidayKey])
            );
        }

        setIsVisible(false);
        if (onClose) onClose();
    };

    if (!currentHoliday || !isVisible) {
        return null;
    }

    return (
        <div className={className}>
            <Alert
                message={currentHoliday.message}
                type={currentHoliday.type}
                onClose={handleClose}
            />
        </div>
    );
}; 